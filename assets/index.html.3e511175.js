import{_ as h,a as u,b as p}from"./windows-downloads.e9b59e10.js";import{_ as g}from"./windows-system-settings.141561e2.js";import{_ as f,a as b,b as y,c as w,d as v,e as _,f as k,g as x}from"./finder.04f876a5.js";import{_ as A}from"./platform-selector.697b4dd8.js";import{_ as S,o as T,c as C,d as o,w as a,a as e,b as t,f as r,r as m}from"./app.87197fef.js";const I={},P=r('<div class="custom-container danger"><p class="custom-container-title">STOP</p><p>This is being kept for archival purposes only from the original Atom documentation. As this may no longer be relevant to Pulsar, you use this at your own risk. Current Pulsar documentation for this section is found at the <a href="/docs/launch-manual/getting-started">documentation home</a>.</p></div><h2 id="getting-started" tabindex="-1"><a class="header-anchor" href="#getting-started" aria-hidden="true">#</a> Getting Started</h2><p>This chapter is about getting started with Atom.</p><h3 id="why-atom" tabindex="-1"><a class="header-anchor" href="#why-atom" aria-hidden="true">#</a> Why Atom?</h3><p>There are a lot of text editors out there; why should you spend your time learning about and using Atom?</p><p>Editors like Sublime and TextMate offer convenience but only limited extensibility. On the other end of the spectrum, Emacs and Vim offer extreme flexibility, but they aren&#39;t very approachable and can only be customized with special-purpose scripting languages.</p><p>We think we can do better. Our goal is a zero-compromise combination of hackability and usability: an editor that will be welcoming to an elementary school student on their first day learning to code, but also a tool they won&#39;t outgrow as they develop into seasoned hackers.</p><p>As we&#39;ve used Atom to build Atom, what began as an experiment has gradually matured into a tool we can&#39;t live without. On the surface, Atom is the modern desktop text editor you&#39;ve come to expect. Pop the hood, however, and you&#39;ll discover a system begging to be hacked on.</p><h4 id="the-nucleus-of-atom" tabindex="-1"><a class="header-anchor" href="#the-nucleus-of-atom" aria-hidden="true">#</a> The Nucleus of Atom</h4><p>The web is not without its faults, but two decades of development has forged it into an incredibly malleable and powerful platform. So when we set out to write a text editor that we ourselves would want to extend, web technology was the obvious choice. But first, we had to free it from its chains.</p><h5 id="the-native-web" tabindex="-1"><a class="header-anchor" href="#the-native-web" aria-hidden="true">#</a> The Native Web</h5><p>Web browsers are great for browsing web pages, but writing code is a specialized activity that warrants dedicated tools. More importantly, the browser severely restricts access to the local system for security reasons, and for us, a text editor that couldn&#39;t write files or run local subprocesses was a non-starter.</p><p>For this reason, we didn&#39;t build Atom as a traditional web application. Instead, Atom is a specialized variant of Chromium designed to be a text editor rather than a web browser. Every Atom window is essentially a locally-rendered web page.</p><p>All the APIs available to a typical Node.js application are also available to the code running in each window&#39;s JavaScript context. This hybrid provides a unique client-side development experience.</p><p>Since everything is local, you don&#39;t have to worry about asset pipelines, script concatenation, and asynchronous module definitions. If you want to load some code, just require it at the top of your file. Node&#39;s module system makes it easy to break the system down into lots of small, focused packages.</p><h5 id="javascript-meet-c" tabindex="-1"><a class="header-anchor" href="#javascript-meet-c" aria-hidden="true">#</a> JavaScript, Meet C++</h5><p>Interacting with native code is also really simple. For example, we wrote a wrapper around the Oniguruma regular expression engine for our TextMate grammar support. In a browser, that would have required adventures with NaCl or Esprima. Node integration made it easy.</p><p>In addition to the Node APIs, we also expose APIs for native dialogs, adding application and context menu items, manipulating the window dimensions, etc.</p><h5 id="web-tech-the-fun-parts" tabindex="-1"><a class="header-anchor" href="#web-tech-the-fun-parts" aria-hidden="true">#</a> Web Tech: The Fun Parts</h5><p>Another great benefit, that comes with writing code for Atom, is the guarantee that it&#39;s running on the newest version of Chromium. That means we can ignore issues like browser compatibility and polyfills. We can use all the web&#39;s shiny features of tomorrow, today.</p><p>For example, the layout of our workspace and panes is based on flexbox. It&#39;s an emerging standard and has gone through a lot of change since we started using it, but none of that mattered as long as it worked.</p><p>With the entire industry pushing web technology forward, we&#39;re confident that we&#39;re building Atom on fertile ground. Native UI technologies come and go, but the web is a standard that becomes more capable and ubiquitous with every passing year. We&#39;re excited to dig deeper into its toolbox.</p><h4 id="an-open-source-text-editor" tabindex="-1"><a class="header-anchor" href="#an-open-source-text-editor" aria-hidden="true">#</a> An Open-Source Text Editor</h4><p>We see Atom as a perfect complement to GitHub&#39;s primary mission of building better software by working together. Atom is a long-term investment, and GitHub will continue to support its development with a dedicated team going forward. But we also know that we can&#39;t achieve our vision for Atom alone. As Emacs and Vim have demonstrated over the past three decades, if you want to build a thriving, long-lasting community around a text editor, it has to be open source.</p><p>The entire Atom editor is free and open source and is available under the https://github.com/atom organization.</p><h3 id="installing-atom" tabindex="-1"><a class="header-anchor" href="#installing-atom" aria-hidden="true">#</a> Installing Atom</h3><p>To get started with Atom, we&#39;ll need to get it on your system. This section will go over installing Atom on your system, as well as the basics of how to build it from source.</p><p>Installing Atom should be fairly simple. Generally, you can go to https://atom.io and you should see a download button as shown here:</p>',28),O=e("p",null,[e("img",{src:h,alt:"Download buttons on https://atom.io",title:"Download buttons on https://atom.io"})],-1),z=e("p",null,[e("img",{src:u,alt:"Download buttons on https://atom.io",title:"Download buttons on https://atom.io"})],-1),F=e("p",null,[e("img",{src:p,alt:"Download buttons on https://atom.io",title:"Download buttons on https://atom.io"})],-1),$=e("p",null,"The button or buttons should be specific to your platform and the download package should be easily installable. However, let's go over them here in a bit of detail.",-1),Y=e("h4",{id:"installing-atom-on-linux",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#installing-atom-on-linux","aria-hidden":"true"},"#"),t(" Installing Atom on Linux")],-1),E=e("p",null,"You can install Atom on Linux using your distribution's package manager by configuring it to use one of our official package repositories. This will also enable you to update Atom when new releases are published.",-1),N=e("h5",{id:"debian-and-ubuntu-deb-apt",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#debian-and-ubuntu-deb-apt","aria-hidden":"true"},"#"),t(" Debian and Ubuntu (deb/apt)")],-1),W=e("p",null,"To install Atom on Debian, Ubuntu, or related distributions, add our official package repository to your system by running the following commands:",-1),U=e("div",{class:"language-command-line ext-command-line line-numbers-mode"},[e("pre",{class:"language-command-line"},[e("code",null,`$ wget -qO - https://packagecloud.io/AtomEditor/atom/gpgkey | sudo apt-
key add -
$ sudo sh -c 'echo "deb [arch=amd64] https://packagecloud.io/AtomEditor/atom/any/ any main" > /etc/apt/sources.list.d/atom.list'
$ sudo apt-get update
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),q=e("p",null,[t("You can now install Atom using "),e("code",null,"apt-get"),t(" (or "),e("code",null,"apt"),t(" on Ubuntu):")],-1),V=e("div",{class:"language-command-line ext-command-line line-numbers-mode"},[e("pre",{class:"language-command-line"},[e("code",null,`# Install Atom
$ sudo apt-get install atom

# Install Atom Beta
$ sudo apt-get install atom-beta
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),j={href:"https://atom.io/download/deb",target:"_blank",rel:"noopener noreferrer"},M=e("div",{class:"language-command-line ext-command-line line-numbers-mode"},[e("pre",{class:"language-command-line"},[e("code",null,`# Install Atom
$ sudo apt install ./atom-amd64.deb
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),L=e("h5",{id:"red-hat-and-centos-yum-or-fedora-dnf",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#red-hat-and-centos-yum-or-fedora-dnf","aria-hidden":"true"},"#"),t(" Red Hat and CentOS (YUM), or Fedora (DNF)")],-1),B=e("p",null,"To install Atom on CentOS, Oracle Linux, Red Hat Enterprise Linux, Scientific Linux, Fedora, or related distributions that use the YUM or DNF package managers, add our official package repository to your system by running the following commands:",-1),D=e("div",{class:"language-command-line ext-command-line line-numbers-mode"},[e("pre",{class:"language-command-line"},[e("code",null,`$ sudo rpm --import https://packagecloud.io/AtomEditor/atom/gpgkey
$ sudo sh -c 'echo -e "[Atom]\\nname=Atom Editor\\nbaseurl=
https://packagecloud.io/AtomEditor/atom/el/7/
\\$basearch\\nenabled=1\\ngpgcheck=0\\nrepo_gpgcheck=1\\ngpgkey=
https://packagecloud.io/AtomEditor/atom/gpgkey" > /etc/yum.repos.d/
atom.repo'
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),H=e("p",null,[t("You can now install Atom using "),e("code",null,"dnf"),t(" (or "),e("code",null,"yum"),t(" depending on your distribution):")],-1),G=e("div",{class:"language-command-line ext-command-line line-numbers-mode"},[e("pre",{class:"language-command-line"},[e("code",null,`# Install Atom
$ sudo dnf install atom

# Install Atom Beta
$ sudo dnf install atom-beta
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),R={href:"https://atom.io/download/rpm",target:"_blank",rel:"noopener noreferrer"},J=e("div",{class:"language-command-line ext-command-line line-numbers-mode"},[e("pre",{class:"language-command-line"},[e("code",null,`# On YUM-based distributions
$ sudo yum install -y atom.x86_64.rpm

# On DNF-based distributions
$ sudo dnf install -y atom.x86_64.rpm
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),K=e("h5",{id:"suse-zypp",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#suse-zypp","aria-hidden":"true"},"#"),t(" SUSE (zypp)")],-1),X=e("p",null,"To install Atom on openSUSE or other distributions that use the Zypp package manager, add our official package repository to your system by running the following commands:",-1),Z=e("div",{class:"language-command-line ext-command-line line-numbers-mode"},[e("pre",{class:"language-command-line"},[e("code",null,`$ sudo sh -c 'echo -e "[Atom]\\nname=Atom Editor\\nbaseurl=
https://packagecloud.io/AtomEditor/atom/el/7/\\$basearch\\nenabled=1\\ntype=rpm-
md\\ngpgcheck=0\\nrepo_gpgcheck=1\\
ngpgkey=https://packagecloud.io/AtomEditor/atom/gpgkey" >
/etc/zypp/repos.d/atom.repo'
$ sudo zypper --gpg-auto-import-keys refresh
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),Q=e("p",null,[t("You can now install Atom using "),e("code",null,"zypper"),t(":")],-1),ee=e("div",{class:"language-command-line ext-command-line line-numbers-mode"},[e("pre",{class:"language-command-line"},[e("code",null,`# Install Atom
$ sudo zypper install atom

# Install Atom Beta
$ sudo zypper install atom-beta
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),te={href:"https://atom.io/download/rpm",target:"_blank",rel:"noopener noreferrer"},oe=e("div",{class:"language-command-line ext-command-line line-numbers-mode"},[e("pre",{class:"language-command-line"},[e("code",null,`$ sudo zypper in -y atom.x86_64.rpm
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),ae=e("h4",{id:"installing-atom-on-mac",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#installing-atom-on-mac","aria-hidden":"true"},"#"),t(" Installing Atom on Mac")],-1),ne={href:"https://github.com/atom/atom/releases/latest",target:"_blank",rel:"noopener noreferrer"},ie=e("code",null,"atom-mac.zip",-1),se=e("code",null,"Atom",-1),le=e("p",null,[t("When you first open Atom, it will try to install the "),e("code",null,"atom"),t(" and "),e("code",null,"apm"),t(" commands for use in the terminal. In some cases, Atom might not be able to install these commands because it needs an administrator password. To check if Atom was able to install the "),e("code",null,"atom"),t(" command, for example, open a terminal window and type "),e("code",null,"which atom"),t(". If the "),e("code",null,"atom"),t(" command has been installed, you'll see something like this:")],-1),re=e("div",{class:"language-command-line ext-command-line line-numbers-mode"},[e("pre",{class:"language-command-line"},[e("code",null,`$ which atom
> /usr/local/bin/atom
$
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),de=e("p",null,[t("If the "),e("code",null,"atom"),t(" command wasn't installed, the "),e("code",null,"which"),t(" command won't return anything:")],-1),ce=e("div",{class:"language-command-line ext-command-line line-numbers-mode"},[e("pre",{class:"language-command-line"},[e("code",null,`$ which atom
$
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),me=e("p",null,[t("To install the "),e("code",null,"atom"),t(" and "),e("code",null,"apm"),t(' commands, run "Window: Install Shell Commands" from the '),e("a",{href:"/getting-started/sections/atom-basics#command-palette"},"Command Palette"),t(", which will prompt you for an administrator password.")],-1),he=e("h4",{id:"installing-atom-on-windows",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#installing-atom-on-windows","aria-hidden":"true"},"#"),t(" Installing Atom on Windows")],-1),ue={href:"https://github.com/atom/atom/releases/latest",target:"_blank",rel:"noopener noreferrer"},pe=e("code",null,"AtomSetup.exe",-1),ge=e("code",null,"AtomSetup-x64.exe",-1),fe=e("code",null,"atom",-1),be=e("code",null,"apm",-1),ye=e("code",null,"PATH",-1),we=e("p",null,[e("img",{src:g,alt:"Atom on Windows"})],-1),ve=e("p",null,[t("The context menu "),e("code",null,"Open with Atom"),t(" in File Explorer, and the option to make Atom available for file association using "),e("code",null,"Open with..."),t(", is controlled by the System Settings panel as seen above.")],-1),_e=e("p",null,[t("With Atom open, click on "),e("code",null,"File > Settings"),t(", and then the "),e("code",null,"System"),t(" tab on the left. Check the boxes next to "),e("code",null,"Show in file context menus"),t(", as well as "),e("code",null,"Show in folder context menus"),t(". And you\u2019re all set.")],-1),ke=e("h4",{id:"updating-atom",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#updating-atom","aria-hidden":"true"},"#"),t(" Updating Atom")],-1),xe=e("p",null,"You should consider updating Atom periodically for the latest improvements to the software. Additionally, When Atom receives hotfixes for security vulnerabilities you will want to update your version of Atom as soon as possible.",-1),Ae=e("code",null,".rpm",-1),Se=e("code",null,".deb",-1),Te={href:"https://flight-manual.atom.io/getting-started/sections/installing-atom/#installing-atom-on-linux",target:"_blank",rel:"noopener noreferrer"},Ce={href:"https://flight-manual.atom.io/getting-started/sections/atom-basics/#settings-and-preferences",target:"_blank",rel:"noopener noreferrer"},Ie=e("p",null,"To perform a manual update:",-1),Pe=e("li",null,[t("Click on the "),e("code",null,"Atom > Check for Update"),t(" menu item in the menu bar.")],-1),Oe=e("code",null,"Application: About",-1),ze={href:"https://flight-manual.atom.io/getting-started/sections/atom-basics/#command-palette",target:"_blank",rel:"noopener noreferrer"},Fe=e("code",null,"Check now",-1),$e=e("p",null,"Atom will begin to update if an update is available.",-1),Ye={href:"https://flight-manual.atom.io/getting-started/sections/atom-basics/#settings-and-preferences",target:"_blank",rel:"noopener noreferrer"},Ee=e("p",null,"To perform a manual update:",-1),Ne=e("li",null,[t("Click on the "),e("code",null,"Help > Check for Update"),t(" menu item in the menu bar.")],-1),We=e("code",null,"Application: About",-1),Ue={href:"https://flight-manual.atom.io/getting-started/sections/atom-basics/#command-palette",target:"_blank",rel:"noopener noreferrer"},qe=e("code",null,"Check now",-1),Ve=e("p",null,"Atom will begin to update if an update is available.",-1),je=e("h4",{id:"portable-mode",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#portable-mode","aria-hidden":"true"},"#"),t(" Portable Mode")],-1),Me=e("p",null,[t("Atom stores configuration and state in a "),e("code",null,".atom"),t(" directory usually located in your home directory "),e("span",{class:"platform-windows"},[t("("),e("code",null,"%userprofile%"),t(" on Windows)")]),t(". You can however run Atom in portable mode where both the app and the configuration are stored together such as on a removable storage device.")],-1),Le={href:"https://github.com/atom/atom/releases/latest",target:"_blank",rel:"noopener noreferrer"},Be=e("p",null,[t("Then create a "),e("code",null,".atom"),t(" directory alongside the directory that contains the Atom binary, for example:")],-1),De=e("div",{class:"language-text ext-text line-numbers-mode"},[e("pre",{class:"language-text"},[e("code",null,`/media/myusb/atom-1.14/atom
/media/myusb/.atom
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),He=e("p",null,[t("Then create a "),e("code",null,".atom"),t(" directory alongside the Atom.app application, for example:")],-1),Ge=e("div",{class:"language-text ext-text line-numbers-mode"},[e("pre",{class:"language-text"},[e("code",null,`/MyUSB/Atom.app
/MyUSB/.atom
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),Re=e("p",null,[t("Then create a "),e("code",null,".atom"),t(" directory alongside the directory that contains atom.exe, for example:")],-1),Je=e("div",{class:"language-text ext-text line-numbers-mode"},[e("pre",{class:"language-text"},[e("code",null,`e:\\atom-1.14\\atom.exe
e:\\.atom
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),Ke=r('<h5 id="portable-notes" tabindex="-1"><a class="header-anchor" href="#portable-notes" aria-hidden="true">#</a> Portable Notes</h5><ul><li>The <code>.atom</code> directory must be writeable</li><li>You can move an existing <code>.atom</code> directory to your portable device</li><li>Atom can also store its Electron user data in your <code>.atom</code> directory - just create a subdirectory called <code>electronUserData</code> inside <code>.atom</code></li><li>Alternatively you can set the <code>ATOM_HOME</code> environment variable to point wherever you want (you can write a .sh or .cmd script to temporarily set it and launch it from that)</li><li>Portable mode installations will not automatically update</li></ul><h4 id="building-atom-from-source" tabindex="-1"><a class="header-anchor" href="#building-atom-from-source" aria-hidden="true">#</a> Building Atom from Source</h4>',3),Xe=r(`<h4 id="proxy-and-firewall-settings" tabindex="-1"><a class="header-anchor" href="#proxy-and-firewall-settings" aria-hidden="true">#</a> Proxy and Firewall Settings</h4><h5 id="behind-a-firewall" tabindex="-1"><a class="header-anchor" href="#behind-a-firewall" aria-hidden="true">#</a> Behind a Firewall?</h5><p>If you are behind a firewall and seeing SSL errors when installing packages you can disable strict SSL by running:</p><div class="language-command-line ext-command-line line-numbers-mode"><pre class="language-command-line"><code>$ apm config set strict-ssl false
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="using-a-proxy" tabindex="-1"><a class="header-anchor" href="#using-a-proxy" aria-hidden="true">#</a> Using a Proxy?</h5><p>If you are using a HTTP(S) proxy you can configure <code>apm</code> to use it by running:</p><div class="language-command-line ext-command-line line-numbers-mode"><pre class="language-command-line"><code>$ apm config set https-proxy &lt;em&gt;YOUR_PROXY_ADDRESS&lt;/em&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>You can run <code>apm config get https-proxy</code> to verify it has been set correctly.</p><h4 id="atom-basics" tabindex="-1"><a class="header-anchor" href="#atom-basics" aria-hidden="true">#</a> Atom Basics</h4><p>Now that Atom is installed on your system, let&#39;s fire it up, configure it and get acquainted with the editor.</p><p>When you launch Atom for the first time, you should get a screen that looks like this:</p><p><img src="`+f+'" alt="Atom&#39;s welcome screen"></p><p>This is the Atom welcome screen and gives you a pretty good starting point for how to get started with the editor.</p><h4 id="terminology" tabindex="-1"><a class="header-anchor" href="#terminology" aria-hidden="true">#</a> Terminology</h4>',14),Ze=r('<h4 id="command-palette" tabindex="-1"><a class="header-anchor" href="#command-palette" aria-hidden="true">#</a> Command Palette</h4><p>In that welcome screen, we are introduced to probably the most important command in Atom, the Command Palette. If you press <kbd class="platform-mac"> Cmd+Shift+P</kbd><kbd class="platform-windows platform-linux">Ctrl+Shift+P </kbd> while focused in an editor pane, the command palette will pop up.</p><div class="custom-container note"><p class="custom-container-title">Note:</p><p>Throughout the book, we will use shortcut keybindings like <kbd class="platform-mac">Cmd+Shift+P</kbd><kbd class="platform-windows platform-linux">Ctrl+Shift+P</kbd> to demonstrate how to run a command. These are the default keybindings for the platform that we detected you running.</p><p>If you want to see a different platform than the one we detected, you may choose a different one by using the platform selector near the top of the page:</p><p><img src="'+A+'" alt="Platform Selector" title="Platform Selector"></p><p>If the Platform Selector is not present, then the current page doesn&#39;t have any platform-specific content.</p><p>If you have customized your Atom keymap, you can always see the keybinding you have mapped in the Command Palette or the Keybindings tab in the <a href="#settings-and-preferences">Settings View</a>.</p></div><p>This search-driven menu can do just about any major task that is possible in Atom. Instead of clicking around all the application menus to look for something, you can press <kbd class="platform-mac">Cmd+Shift+P</kbd><kbd class="platform-windows platform-linux">Ctrl+Shift+P</kbd> and search for the command.</p><p><img src="'+b+'" alt="Command Palette" title="Command Palette"></p><p>Not only can you see and quickly search through thousands of possible commands, but you can also see if there is a keybinding associated with it. This is great because it means you can guess your way to doing interesting things while also learning the shortcut keystrokes for doing it.</p><p>For the rest of the book, we will try to be clear as to the text you can search for in the Command Palette in addition to the keybinding for different commands.</p><h4 id="settings-and-preferences" tabindex="-1"><a class="header-anchor" href="#settings-and-preferences" aria-hidden="true">#</a> Settings and Preferences</h4><p>Atom has a number of settings and preferences you can modify in the Settings View.</p><p><img src="'+y+'" alt="Settings View" title="Settings View"></p><p>This includes things like changing the theme, specifying how to handle wrapping, font settings, tab size, scroll speed and much more. You can also use this screen to install new packages and themes, which we&#39;ll cover in <a href="/sections/atom-packages">Atom Packages</a>.</p><p>To open the Settings View, you can: ::: tabs Settings View</p><template><ul><li>Use the <em>Edit &gt; Preferences</em> menu item in the menu bar</li></ul></template><template><ul><li>Use the <em>Atom &gt; Preferences</em> menu item in the menu bar</li></ul></template>',14),Qe=r('<ul><li>Use the <em>File &gt; Settings</em> menu item in the menu bar</li></ul><p>:::</p><ul><li>Search for <code>settings-view:open</code> in the <a href="#command-palette">Command Palette</a></li><li>Use the <kbd class="platform-mac">Cmd+,</kbd> or <kbd class="platform-windows platform-linux">Ctrl+,</kbd> keybinding</li></ul><h5 id="changing-the-theme" tabindex="-1"><a class="header-anchor" href="#changing-the-theme" aria-hidden="true">#</a> Changing the Theme</h5><p>The Settings View also lets you change the themes for Atom. Atom ships with 4 different UI themes, dark and light variants of the Atom and One theme, as well as 8 different syntax themes. You can modify the active theme by clicking on the Themes tab in the sidebar of the Settings View, or you can install new themes by clicking the Install tab.</p><p><img src="'+w+'" alt="Changing the theme from the Settings View" title="Changing the theme from the Settings View"></p><p>The UI themes control the style of UI elements like the tabs and the tree view, while the syntax themes control the syntax highlighting of text you load into the editor. To change the syntax or UI theme, simply pick something different in the appropriate dropdown list.</p><p>There are also dozens of themes on https://atom.io that you can choose from if you want something different. We will cover customizing a theme in <a href="/sections/basic-customization">Style Tweaks</a> and creating your own theme in <a href="./hacking-atom/sections/creating-a-theme">Creating a Theme</a>.</p><h5 id="soft-wrap" tabindex="-1"><a class="header-anchor" href="#soft-wrap" aria-hidden="true">#</a> Soft Wrap</h5><p>You can use the Settings View to specify your whitespace and wrapping preferences.</p><p><img src="'+v+'" alt="Whitespace and wrapping preferences settings"></p><p>Enabling &quot;Soft Tabs&quot; will insert spaces instead of actual tab characters when you press the <kbd class="platform-all">Tab</kbd> key and the &quot;Tab Length&quot; setting specifies how many spaces to insert when you do so, or how many spaces are used to represent a tab if &quot;Soft Tabs&quot; is disabled.</p><p>The &quot;Soft Wrap&quot; option will wrap lines that are too long to fit in your current window. If soft wrapping is disabled, the lines will simply run off the side of the screen and you will have to scroll the window to see the rest of the content. If &quot;Soft Wrap At Preferred Line Length&quot; is toggled, the lines will wrap at 80 characters instead of the end of the screen. You can also change the default line length to a value other than 80 on this screen.</p>',13),et=r('<h4 id="opening-modifying-and-saving-files" tabindex="-1"><a class="header-anchor" href="#opening-modifying-and-saving-files" aria-hidden="true">#</a> Opening, Modifying, and Saving Files</h4><p>Now that your editor is looking and acting how you want, let&#39;s start opening up and editing files. This is a text editor after all, right?</p><h5 id="opening-a-file" tabindex="-1"><a class="header-anchor" href="#opening-a-file" aria-hidden="true">#</a> Opening a File</h5><p>There are several ways to open a file in Atom. You can do it by choosing <em>File &gt; Open</em> from the menu bar or by pressing <kbd class="platform-mac">Cmd+O </kbd><kbd class="platform-windows platform-linux">Ctrl+O</kbd> to choose a file from the standard dialog.</p><p><img src="'+_+'" alt="Open file by dialog" title="Open file by dialog"></p><p>This is useful for opening a file that is not contained in the project you&#39;re currently in (more on that next), or if you&#39;re starting from a new window for some reason.</p>',6),tt=e("code",null,"atom",-1),ot={class:"platform-mac"},at=e("code",null,"atom",-1),nt=e("code",null,"apm",-1),it={class:"platform-windows platform-linux"},st=e("code",null,"atom",-1),lt=e("code",null,"apm",-1),rt=r(`<p>You can run the <code>atom</code> command with one or more file paths to open up those files in Atom.</p><div class="language-command-line ext-command-line line-numbers-mode"><pre class="language-command-line"><code>$ atom --help
&gt; Atom Editor v1.8.0

&gt; Usage: atom [options] [path ...]

&gt; One or more paths to files or folders may be specified. If there is an
&gt; existing Atom window that contains all of the given folders, the paths
&gt; will be opened in that window. Otherwise, they will be opened in a new
&gt; window.

&gt; ...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This is a great tool if you&#39;re used to the terminal or you work from the terminal a lot. Just fire off <code>atom [files]</code> and you&#39;re ready to start editing. You can even open a file at a certain line (and optionally column) so the cursor will be positioned exactly where you want. For example, you may search some keyword in a repository to find the line you want to edit:</p><div class="language-command-line ext-command-line line-numbers-mode"><pre class="language-command-line"><code>$ git grep -n &#39;Opening a File$&#39;
content/getting-started/sections/atom-basics.md:84:##### Opening a File
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>and then jump to the beginning of that line by appending a colon and the line number to the file path:</p><div class="language-command-line ext-command-line line-numbers-mode"><pre class="language-command-line"><code>$ atom content/getting-started/sections/atom-basics.md:84
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Sometimes you may want the cursor to jump to the exact column position of the searched keyword. Just append another colon plus the column number:</p><div class="language-command-line ext-command-line line-numbers-mode"><pre class="language-command-line"><code>$ git grep -n --column &#39;Windows Explorer&#39;
content/getting-started/sections/atom-basics.md:150:722
$ atom content/getting-started/sections/atom-basics.md:150:722
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="editing-and-saving-a-file" tabindex="-1"><a class="header-anchor" href="#editing-and-saving-a-file" aria-hidden="true">#</a> Editing and Saving a File</h5>`,9),dt={href:"https://atom.io/packages",target:"_blank",rel:"noopener noreferrer"},ct=r('<p>To save a file you can choose <em>File &gt; Save</em> from the menu bar or <kbd class="platform-mac">Cmd+S</kbd><kbd class="platform-windows platform-linux">Ctrl+S</kbd> to save the file. If you choose <em>File &gt; Save As</em> or press <kbd class="platform-mac">Cmd+Shift+S</kbd><kbd class="platform-windows platform-linux">Ctrl+Shift+S</kbd> then you can save the current content in your editor under a different file name. Finally, you can choose <em>File &gt; Save All</em> <span class="platform-mac">or press <kbd class="platform-mac">Alt+Cmd+S</kbd></span> to save all the open files in Atom.</p><h4 id="opening-directories" tabindex="-1"><a class="header-anchor" href="#opening-directories" aria-hidden="true">#</a> Opening Directories</h4><p>Atom doesn&#39;t just work with single files though; you will most likely spend most of your time working on projects with multiple files. To open a directory, choose the menu item <span class="platform-mac"><em>File &gt; Open</em></span><span class="platform-windows platform-linux"><em>File &gt; Open Folder</em></span> and select a directory from the dialog. You can also add more than one directory to your current Atom window, by choosing <em>File &gt; Add Project Folder</em> from the menu bar or pressing <kbd class="platform-mac">Cmd+Shift+O</kbd><kbd class="platform-windows platform-linux">Ctrl+Shift+A</kbd>.</p><p>You can open any number of directories from the command line by passing their paths to the <code>atom</code> command line tool. For example, you could run the command <code>atom ./hopes ./dreams</code> to open both the <code>hopes</code> and the <code>dreams</code> directories at the same time.</p><p>When you open Atom with one or more directories, you will automatically get a Tree View on the side of your window.</p><p><img src="'+k+'" alt="Tree View in an open project" title="Tree View in an open project"></p><p>The Tree View allows you to explore and modify the file and directory structure of your project. You can open, rename, delete and create new files from this view.</p><p>You can also hide and show it with <kbd class="platform-mac">Cmd+\\</kbd><kbd class="platform-windows platform-linux">Ctrl+\\</kbd> or the <code>tree-view: toggle</code> command from the Command Palette, and <kbd class="platform-mac">Ctrl+0 </kbd><kbd class="platform-windows platform-linux">Alt+\\</kbd> will focus it. When the Tree view has focus you can press <kbd class="platform-all">A</kbd>, <kbd class="platform-all">M</kbd>, or <kbd class="platform-all">Delete</kbd> to add, move or delete files and folders. You can also right-click on a file or folder in the Tree view to see many of the various options, including all of these plus showing the file in <span class="platform-mac">Finder</span><span class="platform-windows">Windows Explorer</span><span class="platform-linux">your native filesystem</span> or copying the file path to the clipboard.</p><div class="custom-container note"><p class="custom-container-title">Note</p><p><strong>Atom Packages</strong></p><p>Like many parts of Atom, the Tree View is not built directly into the editor, but is its own standalone package that is shipped with Atom by default. Packages that are bundled with Atom are referred to as Core packages. Ones that aren&#39;t bundled with Atom are referred to as Community packages.</p><p>You can find the source code to the Tree View on GitHub at https://github.com/atom/tree-view.</p><p>This is one of the interesting things about Atom. Many of its core features are actually just packages implemented the same way you would implement any other functionality. This means that if you don&#39;t like the Tree View for example, you could write your own implementation of that functionality and replace it entirely.</p></div><h5 id="opening-a-file-in-a-project" tabindex="-1"><a class="header-anchor" href="#opening-a-file-in-a-project" aria-hidden="true">#</a> Opening a File in a Project</h5><p>Once you have a project open in Atom, you can easily find and open any file within that project.</p><p>If you press <kbd class="platform-mac">Cmd+T</kbd><kbd class="platform-windows platform-linux">Ctrl+T</kbd> or <kbd class="platform-mac">Cmd+P</kbd><kbd class="platform-windows platform-linux">Ctrl+P</kbd>, the Fuzzy Finder will pop up. This will let you quickly search for any file in your project by typing parts of the path.</p><p><img src="'+x+'" alt="Opening files with the Fuzzy Finder" title="Opening files with the Fuzzy Finder"></p><p>You can also search through only the files currently opened (rather than every file in your project) with <kbd class="platform-mac">Cmd+B</kbd><kbd class="platform-windows platform-linux">Ctrl+B</kbd>. This searches through your &quot;buffers&quot; or open files. You can also limit this fuzzy search with <kbd class="platform-mac">Cmd+Shift+B</kbd><kbd class="platform-windows platform-linux">Ctrl+Shift+B</kbd>, which searches only through the files which are new or have been modified since your last Git commit.</p>',14),mt=e("code",null,"core.ignoredNames",-1),ht=e("code",null,"fuzzy-finder.ignoredNames",-1),ut=e("code",null,"core.excludeVCSIgnoredPaths",-1),pt={href:"https://git-scm.com/docs/gitignore",target:"_blank",rel:"noopener noreferrer"},gt=e("code",null,".gitignore",-1),ft=e("code",null,"core.ignoredNames",-1),bt=e("code",null,"fuzzy-finder.ignoredNames",-1),yt={href:"https://github.com/isaacs/minimatch",target:"_blank",rel:"noopener noreferrer"},wt=r('<div class="custom-container tip"><p class="custom-container-title">Tips</p><p><strong>Configuration Setting Notation</strong></p><p>Sometimes you&#39;ll see us refer to configuration settings all spelled out like &quot;Ignored Names in Core Settings&quot;. Other times you&#39;ll see us use the shorthand name like <code>core.ignoredNames</code>. Both of these refer to the same thing. The shorthand is the package name, then a dot <code>.</code>, followed by the &quot;camel-cased&quot; name of the setting.</p><p>If you have a phrase you want to camel-case, follow these steps:</p><ol><li>Lowercase the first word</li><li>Capitalize the first letter in all other words</li><li>Remove the spaces</li></ol><p>So &quot;Ignored Names&quot; becomes &quot;ignoredNames&quot;.</p></div><h3 id="summary" tabindex="-1"><a class="header-anchor" href="#summary" aria-hidden="true">#</a> Summary</h3><p>You should now have a basic understanding of what Atom is and what you want to do with it. You should also have it installed on your system and be able to use it for the most basic text editing operations.</p><p>Now you&#39;re ready to start digging into the fun stuff.</p>',4);function vt(_t,kt){const c=m("Tabs"),n=m("ExternalLinkIcon"),d=m("RouterLink");return T(),C("div",null,[P,o(c,{id:"89",data:[{title:"Linux"},{title:"Mac"},{title:"Windows"}],"tab-id":"installing-atom"},{tab0:a(({title:i,value:s,isActive:l})=>[O]),tab1:a(({title:i,value:s,isActive:l})=>[z]),tab2:a(({title:i,value:s,isActive:l})=>[F]),_:1}),$,o(c,{id:"109",data:[{title:"Linux"},{title:"Mac"},{title:"Windows"}],"tab-id":"installing-atom"},{tab0:a(({title:i,value:s,isActive:l})=>[Y,E,N,W,U,q,V,e("p",null,[t("Alternatively, you can download the "),e("a",j,[t("Atom .deb package"),o(n)]),t(" and install it directly:")]),M,L,B,D,H,G,e("p",null,[t("Alternatively, you can download the "),e("a",R,[t("Atom .rpm package"),o(n)]),t(" and install it directly:")]),J,K,X,Z,Q,ee,e("p",null,[t("Alternatively, you can download the "),e("a",te,[t("Atom .rpm package"),o(n)]),t(" and install it directly:")]),oe]),tab1:a(({title:i,value:s,isActive:l})=>[ae,e("p",null,[t("Atom follows the standard Mac zip installation process. You can either press the download button from the https://atom.io site or you can go to the "),e("a",ne,[t("Atom releases page"),o(n)]),t(" to download the "),ie,t(" file explicitly. Once you have that file, you can click on it to extract the application and then drag the new "),se,t(' application into your "Applications" folder.')]),le,re,de,ce,me]),tab2:a(({title:i,value:s,isActive:l})=>[he,e("p",null,[t("Atom is available with Windows installers that can be downloaded from https://atom.io or from the "),e("a",ue,[t("Atom releases page"),o(n)]),t(". Use "),pe,t(" for 32-bit systems and "),ge,t(" for 64-bit systems. This setup program will install Atom, add the "),fe,t(" and "),be,t(" commands to your "),ye,t(", and create shortcuts on the desktop and in the start menu.")]),we,ve,_e]),_:1}),ke,xe,o(c,{id:"206",data:[{title:"Linux"},{title:"Mac"},{title:"Windows"}],"tab-id":"installing-atom"},{tab0:a(({title:i,value:s,isActive:l})=>[e("p",null,[t("If you are using Atom's official package repositories, use your distribution's package manager to update Atom. Otherwise, you will need to manually download and install the latest "),Ae,t(" or "),Se,t(" package from https://atom.io. For more details, see "),e("a",Te,[t("Installing Atom on Linux."),o(n)])])]),tab1:a(({title:i,value:s,isActive:l})=>[e("p",null,[t('"Automatically Update" is enabled by default in Core Settings of the '),e("a",Ce,[t("Settings View"),o(n)]),t(", which will allow Atom to check for updates automatically. If you disable this setting you can update Atom manually.")]),Ie,e("ul",null,[Pe,e("li",null,[t("Search for "),Oe,t(" in the "),e("a",ze,[t("Command Palette"),o(n)]),t(" and click the "),Fe,t(" button.")])]),$e]),tab2:a(({title:i,value:s,isActive:l})=>[e("p",null,[t('"Automatically Update" is enabled by default in Core Settings of the '),e("a",Ye,[t("Settings View"),o(n)]),t(", which will allow Atom to check for updates automatically. If you disable this setting you can update Atom manually.")]),Ee,e("ul",null,[Ne,e("li",null,[t("Search for "),We,t(" in the "),e("a",Ue,[t("Command Palette"),o(n)]),t(" and click the "),qe,t(" button.")])]),Ve]),_:1}),je,Me,e("p",null,[t("To setup Atom in portable mode download the "),e("a",Le,[t("zip/tar.gz package for your system"),o(n)]),t(" and extract it to your removable storage.")]),o(c,{id:"268",data:[{title:"Linux"},{title:"Mac"},{title:"Windows"}],"tab-id":"installing-atom"},{tab0:a(({title:i,value:s,isActive:l})=>[Be,De]),tab1:a(({title:i,value:s,isActive:l})=>[He,Ge]),tab2:a(({title:i,value:s,isActive:l})=>[Re,Je]),_:1}),Ke,e("p",null,[t("The "),o(d,{to:"/hacking-atom/sections/hacking-on-atom-core/"},{default:a(()=>[t("Hacking on Atom Core")]),_:1}),t(" section of the flight manual covers instructions on how to clone and build the source code if you prefer that option.")]),Xe,e("p",null,[t("You can find definitions for all of the various terms that we use throughout the manual in our "),o(d,{to:"/resources/sections/glossary/"},{default:a(()=>[t("Glossary")]),_:1}),t(".")]),Ze,e("template",null,[Qe,e("p",null,[t("In "),o(d,{to:"/sections/basic-customization/"},{default:a(()=>[t("Basic Customization")]),_:1}),t(" we will see how to set different wrap preferences for different types of files (for example, if you want to wrap Markdown files but not other files).")]),et,e("p",null,[t("Another way to open a file in Atom is from the command line using the "),tt,t(" command. "),e("span",ot,[t('The Atom menu bar has a command named "Install Shell Commands" which installs the '),at,t(" and "),nt,t(" commands "),o(d,{to:"/installing-atom/#installing-atom-on-mac"},{default:a(()=>[t("if Atom wasn't able to install them itself")]),_:1}),t(" .")]),e("span",it,[t("The "),st,t(" and "),lt,t(" commands are installed automatically as a part of Atom's "),o(d,{to:"/sections/installing-atom/"},{default:a(()=>[t("installation process")]),_:1}),t(".")])]),rt,e("p",null,[t("Editing a file is pretty straightforward. You can click around and scroll with your mouse and type to change the content. There is no special editing mode or key commands. If you prefer editors with modes or more complex key commands, you should take a look at the "),e("a",dt,[t("Atom package list"),o(n)]),t(". There are a lot of packages that emulate popular styles.")]),ct,e("p",null,[t("The fuzzy finder uses the "),mt,t(", "),ht,t(" and "),ut,t(" configuration settings to filter out files and folders that will not be shown. If you have a project with tons of files you don't want it to search through, you can add patterns or paths to either of these config settings or your "),e("a",pt,[t("standard "),gt,t(" files"),o(n)]),t(". We'll learn more about config settings in "),o(d,{to:"/using-atom/sections/basic-customization/#global-configuration-settings"},{default:a(()=>[t("Global Configuration Settings")]),_:1}),t(", but for now you can easily set these in the Settings View under Core Settings.")]),e("p",null,[t("Both "),ft,t(" and "),bt,t(" are interpreted as glob patterns as implemented by the "),e("a",yt,[t("minimatch Node module"),o(n)]),t(".")]),wt])])}const It=S(I,[["render",vt],["__file","index.html.vue"]]);export{It as default};
