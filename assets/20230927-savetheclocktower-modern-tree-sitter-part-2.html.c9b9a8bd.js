const e=JSON.parse('{"key":"v-5bad2e3c","path":"/blog/20230927-savetheclocktower-modern-tree-sitter-part-2.html","title":"Modern Tree-sitter, part 2: why scopes matter","lang":"en-US","frontmatter":{"title":"Modern Tree-sitter, part 2: why scopes matter","author":"savetheclocktower","date":"2023-09-27T00:00:00.000Z","category":["dev"],"tag":["modernization","tree-sitter"]},"excerpt":"<p>In <RouterLink to=\\"/blog/20230925-savetheclocktower-modern-tree-sitter-part-1.html\\">the last post</RouterLink>, I tried to explain why the new Tree-sitter integration was worth writing about in the first place: because we needed to integrate it into a system defined by TextMate grammars, and we had to solve some challenging problems along the way.</p>\\n<p>Today I\u2019ll try to illustrate what that system looks like and why it\u2019s important.</p>\\n","headers":[{"level":2,"title":"How TextMate grammars work","slug":"how-textmate-grammars-work","link":"#how-textmate-grammars-work","children":[]},{"level":2,"title":"How TextMate uses scope names","slug":"how-textmate-uses-scope-names","link":"#how-textmate-uses-scope-names","children":[]},{"level":2,"title":"How Pulsar uses scope names","slug":"how-pulsar-uses-scope-names","link":"#how-pulsar-uses-scope-names","children":[]},{"level":2,"title":"What would break?","slug":"what-would-break","link":"#what-would-break","children":[]},{"level":2,"title":"The challenge","slug":"the-challenge","link":"#the-challenge","children":[]}],"git":{"updatedTime":1695833427000,"contributors":[{"name":"Andrew Dupont","email":"github@andrewdupont.net","commits":4}]},"readingTime":{"minutes":7.84,"words":2351},"filePathRelative":"blog/20230927-savetheclocktower-modern-tree-sitter-part-2.md","localizedDate":"September 27, 2023"}');export{e as data};
