import{_ as i,a as r,b as p,c}from"./unity-theme.516a5ae9.js";import{_ as u,o as h,c as d,a,b as e,d as s,w as g,e as m,f as t,r as o}from"./app.87197fef.js";const k={},b=a("h2",{id:"pulsar-packages",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#pulsar-packages","aria-hidden":"true"},"#"),e(" Pulsar Packages")],-1),f={href:"https://github.com/pulsar-edit/tree-view",target:"_blank",rel:"noopener noreferrer"},v={href:"https://github.com/pulsar-edit/settings-view",target:"_blank",rel:"noopener noreferrer"},_={href:"https://github.com/pulsar-edit/welcome",target:"_blank",rel:"noopener noreferrer"},w={href:"https://github.com/pulsar-edit/spell-check",target:"_blank",rel:"noopener noreferrer"},y={href:"https://github.com/pulsar-edit/one-dark-ui",target:"_blank",rel:"noopener noreferrer"},P={href:"https://github.com/pulsar-edit/fuzzy-finder",target:"_blank",rel:"noopener noreferrer"},x=a("p",null,"This means that packages can be incredibly powerful and can change everything from the very look and feel of the entire interface to the basic operation of even core functionality.",-1),I=a("p",null,[e("In order to install a new package, you can use the Install tab in the now familiar Settings View. Open up the Settings View using "),a("strong",null,[a("em",null,"LNX/WIN")]),e(": "),a("kbd",null,"Ctrl+,"),e(" - "),a("strong",null,[a("em",null,"MAC")]),e(": "),a("kbd",null,"Cmd+,"),e(' click on the "Install" tab and type your search query into the box under Install Packages.')],-1),T={href:"https://web.pulsar-edit.dev",target:"_blank",rel:"noopener noreferrer"},C=t('<p><img src="'+i+'" alt="Package install screen" title="Package install screen"><!--TODO: Replace with Pulsar branded pictures--></p><p>All of the packages will come up with an &quot;Install&quot; button. Clicking that will download the package and install it. Your editor will now have the functionality that the package provides.</p><h3 id="package-settings" tabindex="-1"><a class="header-anchor" href="#package-settings" aria-hidden="true">#</a> Package Settings</h3><p>Once a package is installed in Pulsar, it will show up in the Settings View under the &quot;Packages&quot; tab, along with all the pre-installed packages that come with Pulsar. To filter the list in order to find one, you can type into search box directly under the &quot;Installed Packages&quot; heading.</p><p><img src="'+r+'" alt="Package settings screen" title="Package settings screen"></p><p>Clicking on the &quot;Settings&quot; button for a package will give you the settings screen for that package specifically. Here you have the option of changing some of the default variables for the package, seeing what all the command keybindings are, disabling the package temporarily, looking at the source code, seeing the current version of the package, reporting issues and uninstalling the package.</p><p>If a new version of any of your packages is released, Pulsar will automatically detect it and you can upgrade the package from either this screen or from the &quot;Updates&quot; tab. This helps you easily keep all your installed packages up to date.</p><h3 id="pulsar-themes" tabindex="-1"><a class="header-anchor" href="#pulsar-themes" aria-hidden="true">#</a> Pulsar Themes</h3><p>You can also find and install new themes for Pulsar from the Settings View. These can be either UI themes or syntax themes and you can search for them from the &quot;Install&quot; tab, just like searching for new packages. Make sure to press the &quot;Themes&quot; toggle next to the search box.</p><p><img src="'+p+'" alt="Theme search screen" title="Theme search screen"></p><p>Clicking on the theme title will take you to a profile page for the theme on pulsar-edit.dev, which often has a screenshot of the theme. This way you can see what it looks like before installing it.</p><p>Clicking on &quot;Install&quot; will install the theme and make it available in the Theme dropdowns as we saw in <a href="../../getting-started#changing-the-theme">Changing the Theme</a>.</p><p><img src="'+c+`" alt="Example of the Unity UI theme with Monokai syntax theme" title="Example of the Unity UI theme with Monokai syntax theme"></p><h3 id="command-line" tabindex="-1"><a class="header-anchor" href="#command-line" aria-hidden="true">#</a> Command Line</h3><p>You can also install packages or themes from the command line using ppm (Pulsar Package Manager). This is used by running <code>pulsar -p &lt;commmand&gt;</code> or <code>pulsar --package &lt;command&gt;</code>.</p><div class="custom-container tip"><p class="custom-container-title">Tip</p><p>Check that you have ppm available by running the following command in your terminal:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ pulsar <span class="token parameter variable">-p</span> <span class="token builtin class-name">help</span> <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>You should see a message print out with details about the <code>pulsar -p install</code> command.</p><p>If you do not, see the <a href="../../getting-started#installing-pulsar">Installing Pulsar section</a> for instructions on how to install the <code>pulsar</code> command for your system.</p></div><p>You can install packages by using the <code>pulsar -p install</code> command:</p><ul><li><code>pulsar -p install &lt;package_name&gt;</code> to install the latest version.</li><li><code>pulsar -p install &lt;package_name&gt;@&lt;package_version&gt;</code> to install a specific version.</li></ul>`,18),q=a("code",null,"pulsar -p install minimap@4.40.0 ",-1),L=a("code",null,"4.40.0",-1),S={href:"https://pulsar-edit.dev/packages/minimap",target:"_blank",rel:"noopener noreferrer"},V=t(`<p>You can also use ppm to find new packages to install. If you run <code>pulsar -p search</code>, you can search the package registry for a search term.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ pulsar <span class="token parameter variable">-p</span> search linter
<span class="token operator">&gt;</span> Search Results For <span class="token string">&#39;linter&#39;</span> <span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span>
<span class="token operator">&gt;</span> \u251C\u2500\u2500 linter A Base Linter with Cow Powers <span class="token punctuation">(</span><span class="token number">9863242</span> downloads, <span class="token number">4757</span> stars<span class="token punctuation">)</span>
<span class="token operator">&gt;</span> \u251C\u2500\u2500 linter-ui-default Default UI <span class="token keyword">for</span> the Linter package <span class="token punctuation">(</span><span class="token number">7755748</span> downloads, <span class="token number">1201</span> stars<span class="token punctuation">)</span>
<span class="token operator">&gt;</span> \u251C\u2500\u2500 linter-eslint Lint JavaScript on the fly, using ESLint <span class="token punctuation">(</span>v7 or older<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token number">2418043</span> downloads, <span class="token number">1660</span> stars<span class="token punctuation">)</span>
<span class="token operator">&gt;</span> \u251C\u2500\u2500 linter-jshint Linter plugin <span class="token keyword">for</span> JavaScript, using jshint <span class="token punctuation">(</span><span class="token number">1202044</span> downloads, <span class="token number">1271</span> stars<span class="token punctuation">)</span>
<span class="token operator">&gt;</span> \u251C\u2500\u2500 linter-gcc Lint C and C++ <span class="token builtin class-name">source</span> files using gcc / g++ <span class="token punctuation">(</span><span class="token number">863989</span> downloads, <span class="token number">194</span> stars<span class="token punctuation">)</span>
<span class="token operator">&gt;</span> <span class="token punctuation">..</span>.
<span class="token operator">&gt;</span> \u251C\u2500\u2500 linter-shellcheck Lint Bash on the fly, using <span class="token function">shellcheck</span> <span class="token punctuation">(</span><span class="token number">136938</span> downloads, <span class="token number">280</span> stars<span class="token punctuation">)</span>
<span class="token operator">&gt;</span> \u2514\u2500\u2500 linter-rust Lint Rust-files, using rustc and/or <span class="token function">cargo</span> <span class="token punctuation">(</span><span class="token number">132550</span> downloads, <span class="token number">91</span> stars<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can use <code>pulsar -p view</code> to see more information about a specific package.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ pulsar <span class="token parameter variable">-p</span> view linter
<span class="token operator">&gt;</span> linter
<span class="token operator">&gt;</span> \u251C\u2500\u2500 <span class="token number">3.4</span>.0
<span class="token operator">&gt;</span> \u251C\u2500\u2500 https://github.com/steelbrain/linter
<span class="token operator">&gt;</span> \u251C\u2500\u2500 A Base Linter with Cow Powers
<span class="token operator">&gt;</span> \u251C\u2500\u2500 <span class="token number">9863242</span> downloads
<span class="token operator">&gt;</span> \u2514\u2500\u2500 <span class="token number">4757</span> stars
<span class="token operator">&gt;</span>
<span class="token operator">&gt;</span> Run <span class="token variable"><span class="token variable">\`</span>pulsar <span class="token parameter variable">-p</span> <span class="token function">install</span> linter<span class="token variable">\`</span></span> to <span class="token function">install</span> this package.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="using-ppm-to-install-from-other-sources" tabindex="-1"><a class="header-anchor" href="#using-ppm-to-install-from-other-sources" aria-hidden="true">#</a> Using ppm to install from other sources</h4>`,5),R={href:"https://web.pulsar-edit.dev/",target:"_blank",rel:"noopener noreferrer"},U=t('<h5 id="github-or-git-remotes" tabindex="-1"><a class="header-anchor" href="#github-or-git-remotes" aria-hidden="true">#</a> Github or Git Remotes</h5><p>Pulsar can install from a GitHub repository or any valid git remote url. The <code>-b</code> option can then be used to specify a particular tag or branch.</p><p><strong>Git remote</strong><br><code>pulsar -p install &lt;git_remote&gt; [-b &lt;branch_or_tag&gt;]</code></p><p><strong>GitHub</strong><br><code>pulsar -p install &lt;github_username&gt;/&lt;github_project&gt; [-b &lt;branch_or_tag&gt;]</code></p>',4),z={href:"https://github.com/mauricioszabo/generic-lsp/",target:"_blank",rel:"noopener noreferrer"},A=a("p",null,[a("code",null,"pulsar -p install https://github.com/mauricioszabo/generic-lsp/")],-1),B=a("p",null,"or",-1),E=a("p",null,[a("code",null,"pulsar -p install mauricioszabo/generic-lsp")],-1),F=a("p",null,[e("This will use the current HEAD commit of the default branch. If you want to install a specific version from a branch or tag then use the "),a("code",null,"-b"),e(" option:")],-1),G=a("p",null,[e("e.g. "),a("code",null,"pulsar -p install https://github.com/mauricioszabo/generic-lsp/ -b v1.0.3")],-1);function H(N,Y){const n=o("ExternalLinkIcon"),l=o("RouterLink");return h(),d("div",null,[b,a("p",null,[e("First we'll start with the Pulsar package system. As we mentioned previously, Pulsar itself is a very basic core of functionality that ships with a number of useful packages that add new features like the "),a("a",f,[e("Tree View"),s(n)]),e(" and the "),a("a",v,[e("Settings View"),s(n)]),e(".")]),a("p",null,[e("In fact, there are more than 80 packages that comprise all of the functionality that is available in Pulsar by default. For example, the "),a("a",_,[e("Welcome screen"),s(n)]),e(" that you see when you first start Pulsar, the "),a("a",w,[e("spell checker"),s(n)]),e(", the "),a("a",y,[e("themes"),s(n)]),e(" and the "),a("a",P,[e("Fuzzy Finder"),s(n)]),e(" are all packages that are separately maintained and all use the same APIs that you have access to, as we'll see in great detail in "),s(l,{to:"/docs/launch-manual/sections/core-hacking/"},{default:g(()=>[e("Hacking the Core")]),_:1}),e(".")]),x,I,a("p",null,[e("The packages listed here have been published to "),a("a",T,[e("https://web.pulsar-edit.dev"),s(n)]),m("TODO:Change address to final URL (if this is not it)"),e(" which is the official registry for Pulsar packages. Searching on the Settings View will go to the Pulsar package registry and pull in anything that matches your search terms.")]),C,a("p",null,[e("For example "),q,e(" installs the "),L,e(" release of the "),a("a",S,[e("minimap"),s(n)]),e(" package.")]),V,a("p",null,[e("By default ppm will be using the "),a("a",R,[e("Pulsar Package Repository"),s(n)]),e(". However you can also use it to install from other locations which can be useful if you are trying to install a package not published to the Pulsar Package Repository.")]),U,a("p",null,[e("For example to install the "),a("a",z,[e("Generic-LSP"),s(n)]),e(" package from GitHub you could use either:")]),A,B,E,F,G])}const j=u(k,[["render",H],["__file","pulsar-packages.html.vue"]]);export{j as default};
