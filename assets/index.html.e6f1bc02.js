import{_ as r}from"./zoom.50f0dc7b.js";import{_ as l}from"./whitespace-settings.13b26c2a.js";import{_ as c}from"./package-issue-link.51bb6d85.js";import{_ as h}from"./welcome-screen-checkbox.604a29ce.js";import{_ as d}from"./update-atom-macos.07b32cce.js";import{_ as u}from"./find-and-replace-newline.08e81a06.js";import{_ as p}from"./wrap-guide-line.159c54bb.js";import{_ as m,o as g,c as f,a as e,b as t,d as o,w as b,f as n,r as i}from"./app.87197fef.js";const y={},w=n('<div class="custom-container danger"><p class="custom-container-title">STOP</p><p>This is being kept for archival purposes only from the original Atom documentation. As this may no longer be relevant to Pulsar, use this at your own risk. Current Pulsar documentation is found at <a href="/docs/launch-manual/getting-started">documentation home</a>.</p></div><h2 id="faq" tabindex="-1"><a class="header-anchor" href="#faq" aria-hidden="true">#</a> FAQ</h2><p>The collection of Frequently Asked Questions about Atom.</p><h3 id="is-atom-open-source" tabindex="-1"><a class="header-anchor" href="#is-atom-open-source" aria-hidden="true">#</a> Is Atom open source?</h3>',4),v={href:"https://github.com/atom/atom/blob/master/LICENSE.md",target:"_blank",rel:"noopener noreferrer"},k=e("h3",{id:"what-does-atom-cost",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#what-does-atom-cost","aria-hidden":"true"},"#"),t(" What does Atom cost?")],-1),_=e("sup",null,"th",-1),x={href:"https://github.blog/2014-05-06-atom-free-and-open-source-for-everyone/",target:"_blank",rel:"noopener noreferrer"},A=e("h3",{id:"what-platforms-does-atom-run-on",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#what-platforms-does-atom-run-on","aria-hidden":"true"},"#"),t(" What platforms does Atom run on?")],-1),I=e("p",null,"Prebuilt versions of Atom are available for OS X 10.10 or later, Windows 7 or later, RedHat Linux, and Ubuntu Linux.",-1),S={href:"https://github.com/atom/atom/blob/master/README.md#building",target:"_blank",rel:"noopener noreferrer"},T=e("h3",{id:"how-can-i-contribute-to-atom",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#how-can-i-contribute-to-atom","aria-hidden":"true"},"#"),t(" How can I contribute to Atom?")],-1),q={href:"https://flight-manual.atom.io/hacking-atom/sections/tools-of-the-trade/",target:"_blank",rel:"noopener noreferrer"},O={href:"https://github.com/atom",target:"_blank",rel:"noopener noreferrer"},W={href:"https://github.com/atom/atom/blob/master/CONTRIBUTING.md",target:"_blank",rel:"noopener noreferrer"},C=e("h3",{id:"why-does-atom-collect-usage-data",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#why-does-atom-collect-usage-data","aria-hidden":"true"},"#"),t(" Why does Atom collect usage data?")],-1),L=e("p",null,"In the same way that aggregate usage information is important when developing a web application, we've found that it's just as important for desktop applications. By knowing which Atom features are being used the most, and how the editor is performing, we can focus our development efforts in the right place. For details on what data Atom is sending or to learn how to disable metrics gathering, visit https://github.com/atom/metrics.",-1),P=e("h3",{id:"atom-in-the-cloud",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#atom-in-the-cloud","aria-hidden":"true"},"#"),t(" Atom in the cloud?")],-1),M={href:"https://github.com/atom/atom/discussions",target:"_blank",rel:"noopener noreferrer"},E=e("h3",{id:"what-s-the-difference-between-an-ide-and-an-editor",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#what-s-the-difference-between-an-ide-and-an-editor","aria-hidden":"true"},"#"),t(" What's the difference between an IDE and an editor?")],-1),j=e("p",null,[t('The term "IDE" comes from '),e("strong",null,"I"),t("ntegrated "),e("strong",null,"D"),t("evelopment "),e("strong",null,"E"),t("nvironment. It is intended as a set of tools that all work together: text editor, compiler, build or make integration, debugging, etc. Virtually all IDEs are tied specifically to a language or framework or tightly collected set of languages or frameworks. Some examples: Visual Studio for .NET and other Microsoft languages, RubyMine for Ruby, IntelliJ for Java, XCode for Apple technologies.")],-1),D={href:"https://daringfireball.net/projects/markdown/syntax",target:"_blank",rel:"noopener noreferrer"},R={href:"http://orgmode.org/",target:"_blank",rel:"noopener noreferrer"},F=e("p",null,[t("The tradeoff here is that while you can generally get off the ground faster if you're working within the realm of a given IDE, over the long term you spend a bunch of time retraining yourself when you inevitably change from one language or toolchain to the next. If you use an editor, you can continue to use the same workflows that you always have. Tools that you've built into your editor can be carried over to the next language and framework. Your editor becomes more powerful and more customized to how you want to work not just over years but potentially "),e("em",null,"decades"),t(". Just ask people who use vim or Emacs ... both of which have been available for over 25 years!")],-1),Y=e("p",null,"So, if you want something that you can just jump into and be productive right away in a specific technology, perhaps an IDE is what you're looking for. If you want a tool that you can shape and customize into exactly what you want out of it even if it costs you some time up front configuring things, then an editor is probably more your speed \u26A1",-1),z=e("h3",{id:"how-can-i-tell-if-subpixel-antialiasing-is-working",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#how-can-i-tell-if-subpixel-antialiasing-is-working","aria-hidden":"true"},"#"),t(" How can I tell if subpixel antialiasing is working?")],-1),H=e("p",null,"If you take a screenshot and blow it up you'll see something like this:",-1),B=e("p",null,[e("img",{src:r,alt:"Subpixel antialiasing enlarged"})],-1),N=e("p",null,"The text of lines 34-36 are subpixel antialiased. Line 37 is not. You can tell it is subpixel antialiased because one side of the characters will be shifted red and the other side will be shifted blue. The direction of the shift is dependent on the monitor being used.",-1),V={href:"https://en.wikipedia.org/wiki/Subpixel_rendering",target:"_blank",rel:"noopener noreferrer"},J=e("h3",{id:"why-is-atom-deleting-trailing-whitespace-why-is-there-a-newline-at-the-end-of-the-file",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#why-is-atom-deleting-trailing-whitespace-why-is-there-a-newline-at-the-end-of-the-file","aria-hidden":"true"},"#"),t(" Why is Atom deleting trailing whitespace? Why is there a newline at the end of the file?")],-1),$={href:"https://github.com/atom/whitespace",target:"_blank",rel:"noopener noreferrer"},U=e("code",null,"whitespace",-1),X={href:"http://stackoverflow.com/a/729795/1459498",target:"_blank",rel:"noopener noreferrer"},G=e("p",null,"You can disable this feature by going to the Packages list in the Settings View and finding the whitespace package:",-1),Q=e("p",null,[e("img",{src:l,alt:"Whitespace package settings",title:"Whitespace package settings"})],-1),K=n('<h3 id="what-does-safe-mode-do" tabindex="-1"><a class="header-anchor" href="#what-does-safe-mode-do" aria-hidden="true">#</a> What does Safe Mode do?</h3><p>Atom&#39;s Safe Mode, which can be activated by completely exiting all instances of Atom and launching it again using the command <code>atom --safe</code> from the command line, does the following:</p><ol><li>Does <strong>not</strong> load any packages from <code>~/.atom/packages</code> or <code>~/.atom/dev/packages</code></li><li>Does <strong>not</strong> run your <code>init.coffee</code></li><li>Loads only default-installed themes</li></ol><p>The intent of Safe Mode is to determine if a problem is being caused by a community package or is caused by built-in functionality of Atom. Disabling the init script was added because people tend to use the init script as a mini-package of sorts by adding code, commands and other functionality that would normally be in a package.</p>',4),Z={href:"https://pulsar-edit.dev/docs/atom-archive/hacking-atom/#debugging",target:"_blank",rel:"noopener noreferrer"},ee=e("h3",{id:"i-have-a-question-about-a-specific-atom-community-package-where-is-the-best-place-to-ask-it",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#i-have-a-question-about-a-specific-atom-community-package-where-is-the-best-place-to-ask-it","aria-hidden":"true"},"#"),t(" I have a question about a specific Atom community package. Where is the best place to ask it?")],-1),te=e("p",null,"The best place to get a question answered quickly is probably the Issues list for that specific package. You can find the Issues list for a package by going to that package's page on https://atom.io and clicking the Bugs button:",-1),oe=e("p",null,[e("img",{src:c,alt:"Bugs button link"})],-1),ae={href:"https://github.com/atom/atom/discussions",target:"_blank",rel:"noopener noreferrer"},ne=e("h3",{id:"i-m-using-an-international-keyboard-and-keys-that-use-altgr-or-ctrl-alt-aren-t-working",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#i-m-using-an-international-keyboard-and-keys-that-use-altgr-or-ctrl-alt-aren-t-working","aria-hidden":"true"},"#"),t(" I\u2019m using an international keyboard and keys that use AltGr or Ctrl+Alt aren\u2019t working")],-1),ie={href:"http://blog.atom.io/2016/10/17/the-wonderful-world-of-keyboards.html",target:"_blank",rel:"noopener noreferrer"},se=e("h3",{id:"i-m-having-a-problem-with-julia-what-do-i-do",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#i-m-having-a-problem-with-julia-what-do-i-do","aria-hidden":"true"},"#"),t(" I\u2019m having a problem with Julia! What do I do?")],-1),re={href:"http://junolab.org/",target:"_blank",rel:"noopener noreferrer"},le={href:"https://discourse.julialang.org/c/tools/juno",target:"_blank",rel:"noopener noreferrer"},ce=n(`<h3 id="i-m-getting-an-error-about-a-self-signed-certificate-what-do-i-do" tabindex="-1"><a class="header-anchor" href="#i-m-getting-an-error-about-a-self-signed-certificate-what-do-i-do" aria-hidden="true">#</a> I\u2019m getting an error about a \u201Cself-signed certificate\u201D. What do I do?</h3><p>This means that there is a proxy between you and our servers where someone (typically your employer) has installed a &quot;self-signed&quot; security certificate in the proxy. A self-signed certificate is one that isn&#39;t trusted by anyone but the person who created the certificate. Most security certificates are backed by known, trusted and certified companies. So Atom is warning you that your connection to our servers can be snooped and even hacked by whoever created the self-signed certificate. Since it is self-signed, Atom has no way of knowing who that is.</p><p>If you decide that unsecured connections to our servers is acceptable to you, you can use the following instructions.</p><div class="custom-container danger"><p class="custom-container-title">DANGER</p><p>\u{1F6A8} <strong>Danger:</strong> If you decide that <strong>unsecured</strong> connections to our servers is acceptable to you, you can use the following command:</p><div class="language-command-line ext-command-line line-numbers-mode"><pre class="language-command-line"><code>apm config set strict-ssl false
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></div><h3 id="i-m-having-a-problem-with-platformio-what-do-i-do" tabindex="-1"><a class="header-anchor" href="#i-m-having-a-problem-with-platformio-what-do-i-do" aria-hidden="true">#</a> I\u2019m having a problem with PlatformIO! What do I do?</h3>`,5),he={href:"http://platformio.org/",target:"_blank",rel:"noopener noreferrer"},de={href:"https://community.platformio.org/",target:"_blank",rel:"noopener noreferrer"},ue=n(`<h3 id="how-do-i-make-atom-recognize-a-file-with-extension-x-as-language-y" tabindex="-1"><a class="header-anchor" href="#how-do-i-make-atom-recognize-a-file-with-extension-x-as-language-y" aria-hidden="true">#</a> How do I make Atom recognize a file with extension X as language Y?</h3><p>Atom includes a feature called &quot;custom file types&quot; which you can use by adding some entries into your <code>config.cson</code> that look like this:</p><div class="language-coffee ext-coffee line-numbers-mode"><pre class="language-coffee"><code><span class="token property">core</span><span class="token operator">:</span>
  <span class="token property">customFileTypes</span><span class="token operator">:</span>
    <span class="token string-property property">&#39;source.ruby&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token string">&#39;Cheffile&#39;</span>
      <span class="token string">&#39;this-is-also-ruby&#39;</span>
    <span class="token punctuation">]</span>
    <span class="token string-property property">&#39;source.cpp&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token string">&#39;h&#39;</span>
    <span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),pe=e("code",null,"source.ruby",-1),me={href:"http://flight-manual.atom.io/using-atom/sections/basic-customization/#finding-a-languages-scope-name",target:"_blank",rel:"noopener noreferrer"},ge=n('<h3 id="how-do-i-make-the-welcome-screen-stop-showing-up" tabindex="-1"><a class="header-anchor" href="#how-do-i-make-the-welcome-screen-stop-showing-up" aria-hidden="true">#</a> How do I make the Welcome screen stop showing up?</h3><p>You can make the Welcome screen stop showing up by unchecking this box in the welcome screen itself:</p><p><img src="'+h+'" alt="Box to uncheck to make the Welcome screen not show next time Atom is launched"></p><h3 id="how-do-i-preview-web-page-changes-automatically" tabindex="-1"><a class="header-anchor" href="#how-do-i-preview-web-page-changes-automatically" aria-hidden="true">#</a> How do I preview web page changes automatically?</h3><p>There are a couple different approaches, for example:</p>',5),fe={href:"https://atom.io/packages/browser-plus",target:"_blank",rel:"noopener noreferrer"},be={href:"https://atom.io/packages/livereload",target:"_blank",rel:"noopener noreferrer"},ye={href:"https://atom.io/packages",target:"_blank",rel:"noopener noreferrer"},we=e("h3",{id:"how-do-i-accept-input-from-my-program-or-script-when-using-the-script-package",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#how-do-i-accept-input-from-my-program-or-script-when-using-the-script-package","aria-hidden":"true"},"#"),t(" How do I accept input from my program or script when using the script package?")],-1),ve={href:"https://atom.io/packages/script",target:"_blank",rel:"noopener noreferrer"},ke={href:"https://atom.io/packages/search?q=terminal",target:"_blank",rel:"noopener noreferrer"},_e={href:"https://github.com/rgbkrk/atom-script/issues/743",target:"_blank",rel:"noopener noreferrer"},xe=n('<h3 id="i-am-unable-to-update-to-the-latest-version-of-atom-on-macos-how-do-i-fix-this" tabindex="-1"><a class="header-anchor" href="#i-am-unable-to-update-to-the-latest-version-of-atom-on-macos-how-do-i-fix-this" aria-hidden="true">#</a> I am unable to update to the latest version of Atom on macOS. How do I fix this?</h3><p>Atom shows there is a new version available but the version fails to install. You might have an error message showing a permissions error for example:</p><p><img src="'+d+`" alt="Updating Atom on macOS"></p><p>or it will say downloading but forever loops without restarting or updating.</p><p>You need to fix one or more of the following directories:</p><ul><li><code>/Applications/Atom.app/</code></li><li><code>~/Library/Caches/com.github.atom.ShipIt</code></li><li><code>~/Library/Application Support/com.github.atom.ShipIt</code></li></ul><p>Do the following:</p><ol><li>Completely exit Atom</li><li>Open a terminal</li><li>Execute: <code>whoami</code></li><li>Write down the result of the above command, this is your user name</li></ol><p>And then execute these steps for each directory listed above in order:</p><ol><li>Execute: <code>stat -f &quot;%Su&quot; [directory]</code></li><li>It should output either your username or <code>root</code></li><li>If it says <code>root</code> then execute: <code>sudo chown -R $(whoami) [directory]</code></li></ol><p>Once you&#39;ve done the above for both directories, start Atom normally and attempt to update \u{1F44D}</p><h3 id="i-m-trying-to-change-my-syntax-colors-from-styles-less-but-it-isn-t-working" tabindex="-1"><a class="header-anchor" href="#i-m-trying-to-change-my-syntax-colors-from-styles-less-but-it-isn-t-working" aria-hidden="true">#</a> I\u2019m trying to change my syntax colors from styles.less, but it isn\u2019t working!</h3><p>The best way to tweak the syntax is to wrap your syntax style rules with <code>atom-text-editor</code> and then prepend every scope with <code>syntax--</code>. If you want your comments to be blue, for example, you would do the following:</p><div class="language-less ext-less line-numbers-mode"><pre class="language-less"><code><span class="token selector">atom-text-editor</span> <span class="token punctuation">{</span>
	<span class="token selector">.syntax--comment</span> <span class="token punctuation">{</span>
		<span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="how-do-i-build-or-execute-code-i-ve-written-in-atom" tabindex="-1"><a class="header-anchor" href="#how-do-i-build-or-execute-code-i-ve-written-in-atom" aria-hidden="true">#</a> How do I build or execute code I&#39;ve written in Atom?</h3>`,15),Ae={href:"https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop",target:"_blank",rel:"noopener noreferrer"},Ie=e("ol",null,[e("li",null,"Launch Atom"),e("li",null,[t("Select the menu "),e("code",null,"View > Developer > Toggle Developer Tools")]),e("li",null,'Click the "Console" tab')],-1),Se=e("p",null,"If you're looking for a JavaScript execution environment beyond a REPL, Atom doesn't come with anything built-in for that purpose.",-1),Te=e("p",null,"If you want to build code or execute scripts from within Atom there are a number of packages available including:",-1),qe={href:"https://atom.io/packages/build",target:"_blank",rel:"noopener noreferrer"},Oe={href:"https://atom.io/packages/script",target:"_blank",rel:"noopener noreferrer"},We=e("hr",null,null,-1),Ce=e("p",null,"Resources on getting started with languages that are commonly asked about:",-1),Le={href:"https://www.python.org/about/gettingstarted/",target:"_blank",rel:"noopener noreferrer"},Pe=n(`<h3 id="how-do-i-uninstall-atom-on-macos" tabindex="-1"><a class="header-anchor" href="#how-do-i-uninstall-atom-on-macos" aria-hidden="true">#</a> How do I uninstall Atom on macOS?</h3><p>To uninstall Atom on macOS, run the following commands from the command line:</p><div class="language-command-line ext-command-line line-numbers-mode"><pre class="language-command-line"><code>rm -rf ~/.atom
rm -rf /usr/local/bin/atom
rm -rf /usr/local/bin/apm
rm -rf /Applications/Atom.app
rm -rf ~/Library/Preferences/com.github.atom.plist
rm -rf &quot;~/Library/Application Support/com.github.atom.ShipIt&quot;
rm -rf &quot;~/Library/Application Support/Atom&quot;
rm -rf &quot;~/Library/Saved Application State/com.github.atom.savedState&quot;
rm -rf ~/Library/Caches/com.github.atom
rm -rf ~/Library/Caches/Atom
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="macos-mojave-font-rendering-change" tabindex="-1"><a class="header-anchor" href="#macos-mojave-font-rendering-change" aria-hidden="true">#</a> MacOS Mojave font rendering change</h3>`,4),Me={href:"https://www.apple.com/macos/mojave/",target:"_blank",rel:"noopener noreferrer"},Ee={href:"https://github.com/atom/atom/issues/17486",target:"_blank",rel:"noopener noreferrer"},je=n('<p>If this change is something that you dislike, there are a couple workarounds that the community has identified.</p><h4 id="change-the-os-defaults" tabindex="-1"><a class="header-anchor" href="#change-the-os-defaults" aria-hidden="true">#</a> Change the OS defaults</h4><ol><li>Execute at the Terminal: <code>defaults write -g CGFontRenderingFontSmoothingDisabled -bool NO</code></li><li>Completely exit Atom</li><li>Start Atom again</li></ol><p>This appears to re-enable the old &quot;LCD font smoothing&quot; option that was removed in Mojave. It is important to note that this is an <strong>OS-wide</strong> change.</p><h4 id="change-your-font-weight" tabindex="-1"><a class="header-anchor" href="#change-your-font-weight" aria-hidden="true">#</a> Change your font weight</h4>',5),De={href:"https://flight-manual.atom.io/using-atom/sections/basic-customization/#style-tweaks",target:"_blank",rel:"noopener noreferrer"},Re=n(`<div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">atom-text-editor</span> <span class="token punctuation">{</span>
	<span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This has the benefit of being a change local to Atom only if the rest of the OS looks fine to you.</p><h3 id="why-does-macos-say-that-atom-wants-to-access-my-calendar-contacts-photos-etc" tabindex="-1"><a class="header-anchor" href="#why-does-macos-say-that-atom-wants-to-access-my-calendar-contacts-photos-etc" aria-hidden="true">#</a> Why does macOS say that Atom wants to access my calendar, contacts, photos, etc.?</h3><p>With macOS 10.14 Mojave, Apple introduced new privacy protections similar to the existing protections found in iOS. Whenever an application attempts to access the files inside certain newly-protected directories, macOS asks the user whether they want to allow the application to access the content in those directories. These new privacy protections apply to the directories that contain your calendars, contacts, photos, mail, messages, and Time Machine backups.</p><p>Applications trigger these new macOS prompts when attempting to access these directories in any way. Simply attempting to <em>list</em> the files in one of these directories is enough to trigger these prompts. These protections even apply to Apple&#39;s own applications. For example, if you open <code>Terminal.app</code> and try to list the files in <code>~/Library/Calendars</code>, macOS shows a prompt saying, &#39;&quot;Terminal&quot; would like access to your calendar.&#39;</p><img width="602" alt="screen shot 2018-10-03 at 14 04 40 pm" src="https://user-images.githubusercontent.com/2988/46432184-9bfe9f80-c71b-11e8-8916-e844b7f4110e.png"><h4 id="why-does-atom-need-access-to-my-calendar-contacts-photos-etc" tabindex="-1"><a class="header-anchor" href="#why-does-atom-need-access-to-my-calendar-contacts-photos-etc" aria-hidden="true">#</a> Why does Atom need access to my calendar, contacts, photos, etc.?</h4>`,7),Fe=e("code",null,"~",-1),Ye={href:"https://flight-manual.atom.io/getting-started/sections/atom-basics/#opening-a-file-in-a-project",target:"_blank",rel:"noopener noreferrer"},ze=e("img",{width:"1030",alt:"fuzzy-finder can trigger prompt",src:"https://user-images.githubusercontent.com/2988/46432185-9bfe9f80-c71b-11e8-83f7-758c3212d16c.png"},null,-1),He={href:"https://flight-manual.atom.io/using-atom/sections/find-and-replace/",target:"_blank",rel:"noopener noreferrer"},Be=n(`<p>In addition to containing the files you&#39;re <em>intending</em> to edit inside Atom, your home directory also contains your files that have new OS-level protections in Mojave:</p><ul><li>Calendar files (<code>~/Library/Calendars</code>)</li><li>Contacts files (<code>~/Library/Application\\ Support/AddressBook</code></li><li>Mail files (<code>~/Library/Mail</code>)</li><li>Photos files (<code>~/Pictures/Photos\\ Library.photoslibrary</code>)</li></ul><p>Before letting Atom read these files, Mojave is understandably asking whether you want Atom to be able to access this personal data.</p><h4 id="what-should-i-do-when-i-see-these-prompts" tabindex="-1"><a class="header-anchor" href="#what-should-i-do-when-i-see-these-prompts" aria-hidden="true">#</a> What should I do when I see these prompts?</h4><p>Most people don&#39;t use Atom to view or edit their calendar files, contact files, photo library, etc. If you don&#39;t intend to use Atom to view/edit these files, then Atom doesn&#39;t need access to them. If you see a prompt from macOS saying that Atom would like to access these items, simply click <strong>Don&#39;t Allow</strong>.</p><h4 id="what-happens-if-i-allow-atom-to-access-my-calendar-contacts-photos-etc" tabindex="-1"><a class="header-anchor" href="#what-happens-if-i-allow-atom-to-access-my-calendar-contacts-photos-etc" aria-hidden="true">#</a> What happens if I <em>allow</em> Atom to access my calendar, contacts, photos, etc.?</h4><p>To Atom, these items are just files on disk. Atom treats them exactly like any other file you would view in Atom. Therefore, if you allow Atom to access these items, you&#39;ll be able to use Atom to browse the directories that contain these items, and you&#39;ll be able to view the files in those directories. That&#39;s it. Nothing more.</p><h4 id="you-ll-only-be-prompted-once" tabindex="-1"><a class="header-anchor" href="#you-ll-only-be-prompted-once" aria-hidden="true">#</a> You&#39;ll only be prompted once</h4><p>Fortunately, macOS will only prompt you once for each type of personal data. In other words, you might see a prompt asking you whether Atom can access your calendar, and you might see a prompt asking you whether Atom can access your contacts, but once you make those decisions, you won&#39;t see those prompts again.</p><h4 id="what-if-i-change-my-mind" tabindex="-1"><a class="header-anchor" href="#what-if-i-change-my-mind" aria-hidden="true">#</a> What if I change my mind?</h4><p>At any time, you can change your choices via System Preferences. Inside System Preferences, go to <code>Security and Privacy</code>, click the <code>Privacy</code> tab, and then click on <code>Calendars</code> to manage which apps can access your <code>Calendars</code>. The same goes for <code>Contacts</code>, <code>Photos</code>, etc.:</p><img width="780" alt="manage access in system preferences" src="https://user-images.githubusercontent.com/2988/46432459-51315780-c71c-11e8-96b5-83edea8b4be2.png"><h4 id="what-if-i-never-want-to-see-these-prompts" tabindex="-1"><a class="header-anchor" href="#what-if-i-never-want-to-see-these-prompts" aria-hidden="true">#</a> What if I never want to see these prompts?</h4><p>Many people understandably expect their text editor to be able to open any file on disk. And that&#39;s exactly how things worked prior to macOS Mojave. If you would like to restore that behavior, you can proactively instruct macOS to allow you to access all files with Atom. To do so:</p><ol><li>Open your <code>Applications</code> folder in the Finder</li><li>Open System Preferences, click the <code>Security and Privacy</code> icon, click the <code>Privacy</code> tab, and then click on <code>Full Disk Access</code> in the left-hand sidebar</li><li>Click the lock icon to unlock System Preferences</li><li>Drag Atom into <code>Full Disk Access</code> as shown below</li></ol><p><img src="https://user-images.githubusercontent.com/2988/46491820-cf9fff00-c7d9-11e8-8b92-44fea5d3c437.gif" alt="restore pre-mojave security via full-disk access"></p><h3 id="how-do-i-turn-on-line-wrap" tabindex="-1"><a class="header-anchor" href="#how-do-i-turn-on-line-wrap" aria-hidden="true">#</a> How do I turn on line wrap?</h3><ol><li>Open the Settings View using <kbd>Cmd+,</kbd> on macOS or <kbd>Ctrl+,</kbd> on other platforms</li><li>Click the \u201CEditor\u201D tab on the left of the settings view</li><li>Put a check in the \u201CSoft Wrap\u201D setting</li></ol><p>For more details about soft wrap, see: https://flight-manual.atom.io/getting-started/sections/atom-basics/#soft-wrap.</p><h3 id="the-menu-bar-disappeared-how-do-i-get-it-back" tabindex="-1"><a class="header-anchor" href="#the-menu-bar-disappeared-how-do-i-get-it-back" aria-hidden="true">#</a> The menu bar disappeared, how do I get it back?</h3><p>If you&#39;re running Windows or Linux and you don&#39;t see the menu bar, it may have been accidentally toggled it off. You can bring it back from the Command Palette with <code>Window: Toggle Menu Bar</code> or by pressing <kbd>Alt</kbd>.</p><p>You can disable hiding the menu bar with <kbd>Alt</kbd> by unchecking <code>Settings &gt; Core &gt; Auto Hide Menu Bar</code>.</p><h3 id="how-do-i-use-a-newline-in-the-result-of-find-and-replace" tabindex="-1"><a class="header-anchor" href="#how-do-i-use-a-newline-in-the-result-of-find-and-replace" aria-hidden="true">#</a> How do I use a newline in the result of find and replace?</h3><p>To use a newline in the result of find and replace, enable the <code>Use Regex</code> option and use &quot;\\n&quot; in your replacement text. For example, given this text:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>hello, world, goodbye
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>If you&#39;d like to replace the &quot;, &quot; with a newline so you end up with this text:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>hello
world
goodbye
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In the find and replace settings, enable <code>Use Regex</code>, enter &quot;, &quot; as the find text, and enter &quot;\\n&quot; as the replace text:</p><p><img src="`+u+'" alt="Find and replace with newline replace"></p><p>Then click <code>Find All</code> and finally, click <code>Replace All</code>.</p><h3 id="what-is-this-line-on-the-right-in-the-editor-view" tabindex="-1"><a class="header-anchor" href="#what-is-this-line-on-the-right-in-the-editor-view" aria-hidden="true">#</a> What is this line on the right in the editor view?</h3><p><img src="'+p+'" alt="Wrap guide line"></p><p>That&#39;s the wrap guide. It is a visual indicator of when your lines of code are getting too long. It defaults to the column that your Preferred Line Length is set to.</p><p>If you want to turn it off, you can disable the wrap-guide package in the Settings View.</p>',34);function Ne(Ve,Je){const a=i("ExternalLinkIcon"),s=i("RouterLink");return g(),f("div",null,[w,e("p",null,[t("Yes, "),e("a",v,[t("Atom is licensed under the MIT license."),o(a)])]),k,e("p",null,[t("Since the 6"),_,t(" of May, 2014, "),e("a",x,[t("Atom has been available for download free of charge for everyone"),o(a)]),t(". This includes business and enterprise use.")]),A,I,e("p",null,[t("If you would like to build from source on Windows, Linux, or OS X, see the "),e("a",S,[t("Atom README"),o(a)]),t(" for more information.")]),T,e("p",null,[t("You can contribute by "),e("a",q,[t("creating a package"),o(a)]),t(" that adds something awesome to Atom!")]),e("p",null,[t("Also, if you\u2019d like to contribute to the core editor, one of the bundled packages, or one of the libraries that power Atom, just go to "),e("a",O,[t("github.com/atom"),o(a)]),t(".")]),e("p",null,[t("You should also read the "),e("a",W,[t("contributing guide"),o(a)]),t(" before getting started.")]),C,L,P,e("p",null,[t("The Atom team has no plans to make a cloud- or server-based version of Atom. For discussion of the idea, see the "),e("a",M,[t("Atom message board"),o(a)]),t(".")]),E,j,e("p",null,[t("An editor is simply that, a tool that is designed to edit text. Typically they are optimized for programming languages though many programmer's text editors are branching out and adding features for non-programming text like "),e("a",D,[t("Markdown"),o(a)]),t(" or "),e("a",R,[t("Org Mode"),o(a)]),t(". The key here is that text editors are designed to work with whatever language or framework you choose.")]),F,Y,z,H,B,N,e("p",null,[t("You can find more information on "),e("a",V,[t("subpixel rendering on Wikipedia"),o(a)]),t(".")]),J,e("p",null,[t("Atom ships with the "),e("a",$,[U,t(" package"),o(a)]),t(", which by default strips trailing whitespace from lines in your file, and inserts a final trailing newline to indicate end-of-file "),e("a",X,[t("as per the POSIX standard"),o(a)]),t(".")]),G,Q,e("p",null,[t("Take a look at "),o(s,{to:"/using-atom/sections/editing-and-deleting-text/#whitespace"},{default:b(()=>[t("the Whitespace section")]),_:1}),t(" for more information.")]),K,e("p",null,[t("For more information on Safe Mode, check the "),e("a",Z,[t("debugging section"),o(a)]),t(".")]),ee,te,oe,e("p",null,[t("And you can always ask Atom-related questions in the "),e("a",ae,[t("official Atom message board"),o(a)]),t(". Someone here may know the answer! It's just with over 3,500 packages (as of early February 2016), the forum members may not know all answers for all packages \u{1F600}")]),ne,e("p",null,[t("As of Atom v1.12, a fix is available for this. See "),e("a",ie,[t('the blog post "The Wonderful World of Keyboards"'),o(a)]),t(" for more information.")]),se,e("p",null,[e("a",re,[t("Juno"),o(a)]),t(" is a development environment built on top of Atom but has enough separate customizations that they have their own "),e("a",le,[t("message board"),o(a)]),t(". You will probably have better luck asking your question there.")]),ce,e("p",null,[e("a",he,[t("PlatformIO"),o(a)]),t(" is a development environment built on top of Atom but has enough separate customizations that they have their own "),e("a",de,[t("message board"),o(a)]),t(". If your question has to do with PlatformIO specifically, you may have better luck getting your answer there.")]),ue,e("p",null,[t("The key (for example "),pe,t(" in the above snippet) is the language's "),e("a",me,[t("scope name"),o(a)]),t(". The value is an array of file extensions, without the period, to match to that scope name.")]),ge,e("ul",null,[e("li",null,[e("a",fe,[t("browser-plus"),o(a)]),t(" gives a reasonably full browser implementation within Atom")]),e("li",null,[e("a",be,[t("livereload"),o(a)]),t(" gives you a preview in any browser, but requires you to save the file first.")])]),e("p",null,[t("Other packages may be available now, you can search for Atom packages on the "),e("a",ye,[t("packages site"),o(a)]),t(".")]),we,e("p",null,[t("The "),e("a",ve,[t("script package"),o(a)]),t(" doesn't support accepting input from the user in the scripts it runs. The option with the best chance of success is to run the script or program from the terminal that comes with your operating system. If that isn't something you want to do, you could try one of the many "),e("a",ke,[t("terminal packages"),o(a)]),t(" that are available.")]),e("p",null,[t("See "),e("a",_e,[t("rgbkrk/atom-script#743"),o(a)]),t(" for details.")]),xe,e("p",null,[t("Atom doesn't have built-in support for building any type of code nor does it have built-in support for executing any kind of code other than JavaScript. Atom has a JavaScript interactive command-line (also known as a "),e("a",Ae,[t("REPL"),o(a)]),t(") available through the Developer Tools. You can access the JavaScript REPL by using the following steps:")]),Ie,Se,Te,e("ul",null,[e("li",null,[e("a",qe,[t("build"),o(a)])]),e("li",null,[e("a",Oe,[t("script"),o(a)])])]),We,Ce,e("ul",null,[e("li",null,[e("a",Le,[t("Python"),o(a)])])]),Pe,e("p",null,[t("In "),e("a",Me,[t("macOS Mojave v10.14.x"),o(a)]),t(', Apple disabled subpixel antialiasing on all monitors by default. Previous to Mojave, subpixel antialiasing was disabled only on Retina displays or on all displays if the "LCD font smoothing" option was disabled in System Preferences. With this change in Mojave, some users have reported that '),e("a",Ee,[t('their fonts in Atom appear "thinner" or "dimmer" than they did previously.'),o(a)]),t(" It can look better or worse depending on your font and theme selections, but in all cases this is completely a side-effect of the change that Apple made to their font rendering and is outside Atom's and Electron's control.")]),je,e("p",null,[t("Add the following to "),e("a",De,[t("your stylesheet"),o(a)]),t(":")]),Re,e("p",null,[t("Atom doesn't need access to these items, but you might unintentionally cause Atom to try to access these items. This commonly occurs when you open your home directory ("),Fe,t(") inside Atom and run a command that examines all files and directories beneath your home directory. For example, when you open the "),e("a",Ye,[t("fuzzy-finder"),o(a)]),t(", it indexes the currently-open directory so that it can show you the available files:")]),ze,e("p",null,[t("Similarly, using "),e("a",He,[t("find-and-replace"),o(a)]),t(" across the entire home directory will cause Atom to scan all files under your home directory.")]),Be])}const tt=m(y,[["render",Ne],["__file","index.html.vue"]]);export{tt as default};
